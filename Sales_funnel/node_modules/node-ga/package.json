{
  "_args": [
    [
      "node-ga@^0.1.1",
      "/home/administrator/Sales_funnel"
    ]
  ],
  "_from": "node-ga@>=0.1.1 <0.2.0",
  "_id": "node-ga@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/node-ga",
  "_npmUser": {
    "email": "josh.guthrie@gmail.com",
    "name": "joshleaves"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "name": "node-ga",
    "raw": "node-ga@^0.1.1",
    "rawSpec": "^0.1.1",
    "scope": null,
    "spec": ">=0.1.1 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-ga/-/node-ga-0.1.1.tgz",
  "_shasum": "fca330dd9bc651d30e7c9b106c0d9c314ec8e655",
  "_shrinkwrap": null,
  "_spec": "node-ga@^0.1.1",
  "_where": "/home/administrator/Sales_funnel",
  "author": {
    "email": "josh.guthrie@gmail.com",
    "name": "JoshLeaves"
  },
  "bugs": {
    "url": "https://github.com/joshleaves/node-ga/issues"
  },
  "dependencies": {
    "async": "0.2.6"
  },
  "description": "Log server calls using Google Analytics",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fca330dd9bc651d30e7c9b106c0d9c314ec8e655",
    "tarball": "https://registry.npmjs.org/node-ga/-/node-ga-0.1.1.tgz"
  },
  "homepage": "https://github.com/joshleaves/node-ga#readme",
  "keywords": [
    "google",
    "analytics"
  ],
  "license": "BSD",
  "main": "index.js",
  "maintainers": [
    {
      "email": "josh.guthrie@gmail.com",
      "name": "joshleaves"
    }
  ],
  "name": "node-ga",
  "optionalDependencies": {},
  "readme": "node-ga:\n========\nLogging middleware for express: translate your API calls to visit to your website by using Google Analytics.\n\nThis module uses the [Google Analytics for mobile websites](https://developers.google.com/analytics/devguides/collection/other/mobileWebsites) API. Thus, your account ID must start with 'MO' instead of 'UA'. You can just give your usual account ID, this module will do the translation.\n\nUsage:\n======\n    var express = require('express');\n    var ga = require('node-ga');\n    var app = express();\n\n    app.use(express.cookieParser());\n    app.use(ga('UA-XXXXXXXX-Y', {\n        safe: true\n    }));\n\n    app.get('/', function (req, res, next) {\n      return res.end('Hello world!');\n    });\n\nOptions:\n========\n\n    safe: {Boolean}\nIf set to false, the log will be wrapped in a function to be called later by process.nextTick(). Defaults to true, in which case the request will be logged before being passed to next().\n\n    cookie_name: {String}\nCustom cookie name to log the visitor ID. Defaults to \"__utmnodejs\".\n\n    custom: {Object}\nDictionary of functions to use on req and res to retrieve some custom values asynchronously. See next section for examples.\n\nCustom values:\n==============\nYou can use asynchronous functions to assign custom key/values to the Google Analytics request. Give each of key a function that will take three parameters: ServerRequest, ServerObject and a callback function (with error and result) to be called once you're done.\n\nNOTE: Returning a null value instead of a string will NOT log the data. In the following example, the value for \"key_three\" is NEVER sent to the Google Analytics server.\n\n    var express = require('express');\n    var ga = require('node-ga');\n    var app = express();\n\n    function func_key_one (req, res, next) {\n        return asynchronous_mongodb_call(function (err, result) {\n            if (err) return next(err);\n            var data = result.process();\n            return next(null, data);\n        });\n    };\n\n    app.use(express.cookieParser());\n    app.use(ga('UA-XXXXXXXX-Y', {\n        custom: {\n            key_one: func_key_one,\n            key_two: function (req, res, next) {\n                return next(null, 'hello');\n            },\n            key_three: function (req, res, next) { return next(null, null); }\n        }\n    }));\n\n    app.get('/', function (req, res, next) {\n      return res.end('Hello world!');\n    });\n\n\nUsage outside express:\n=====================\nThis middleware can be used without express. The cookie is automatically added with res.setHeader(). You should however parse req.headers['cookie'] to an object in req.cookies to avoid an unique being seen as multiple visits. The module will still work fine otherwise.\n\n    var http = require('http');\n    var ga = require('node-ga')('UA-XXXXXXXX-Y', { safe: true});\n\n    http.createServer(function (req, res) {\n        return ga(req, res, function () {\n          res.end('Hello world!');\n        });\n    }).listen(80);\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joshleaves/node-ga.git"
  },
  "version": "0.1.1"
}
